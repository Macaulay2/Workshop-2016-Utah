These are a couple of couple of things we noticed that still need to be done as of the end of Utah 2016 workshop

1)  Add to Fthresholds.m2 a binary search function that at present is called multiple times (see the file for more details).

2) Consolidate (e.g., make a method called "testIdeal" that combines all of the specialized function) and clean up "testIdeals.m2"

3)  Genearlize ethRootSafe from (ZZ, ZZ, RingElement, Ideal) to (ZZ, ZZ, Ideal, Ideal) by replacing f^a with I^[a], where the later is an integral generalized Frobenius power.

4) An similalr method appears in ascendIdeal, ethRootSafe, GenealizedFrobeniusPower(QQ, Ideal), and taupoly(QQ, RingElement.  More precisely, the loop to compute (f^a I)^[1/p^e] using the base p expansion of a comes up a bunch.  We should probably uniformize this.

5) Consider removing baseP1 and replacing it with one of the other base-p expansions. Otherwise it needs to have test cases.

6) Think about carryTest in BasicFunctions, it is only used in firstCarry, which seems to give the right answer, but the code seems like it may be able to be cleaned up.